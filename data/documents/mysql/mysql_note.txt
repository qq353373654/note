// mysql 登录
mysql -h 主机 -P 端口 -u 用户名 -p

sql:
  `MODIFIED` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `CREATED` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '创建时间',
  `ID` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '自增主键',
  `expire` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '有效期截止时间（时间戳秒），0无限期',

sql查看索引
mysql> show index from tblname;
mysql> show keys from tblname;

type显示的是访问类型，是较为重要的一个指标，结果值从好到坏依次是：
system > const > eq_ref > ref > fulltext > ref_or_null > index_merge > unique_subquery > index_subquery > range > index > ALL

Extra

Distinct 一旦MYSQL找到了与行相联合匹配的行，就不再搜索了

Not exists MYSQL优化了LEFT JOIN，一旦它找到了匹配LEFT JOIN标准的行，就不再搜索了

Range checked for eachRecord（index map:#）没有找到理想的索引，因此对于从前面表中来的每一个行组合，MYSQL检查使用哪个索引，并用它来从表中返回行。这是使用索引的最慢的连接之一

Using filesort 看到这个的时候，查询就需要优化了。MYSQL需要进行额外的步骤来发现如何对返回的行排序。它根据连接类型以及存储排序键值和匹配条件的全部行的行指针来排序全部行

Using index 列数据是从仅仅使用了索引中的信息而没有读取实际的行动的表返回的，这发生在对表的全部的请求列都是同一个索引的部分的时候

Using temporary 看到这个的时候，查询需要优化了。这里，MYSQL需要创建一个临时表来存储结果，这通常发生在对不同的列集进行ORDER BY上，而不是GROUP BY上

Using Where 使用了WHERE从句来限制哪些行将与下一张表匹配或者是返回给用户。如果不想返回表中的全部行，并且连接类型ALL或index，这就会发生，或者是查询有问题

如果此信息显示Using filesort或者Using temporary的话会很吃力，WHERE和ORDER BY的索引经常无法兼顾，如果按照WHERE来确定索引，那么在ORDER BY时，就必然会引起Using filesort，这就要看是先过滤再排序划算，还是先排序再过滤划算。


// 添加列
alter table 表名 add 列名 类型(长度) 约束;
// 修改列名称
alter table 表名 change 列名 类型(长度) 约束;
// 删除列
alter table 表名 drop 列名;
alter table t_prod_merchant_rel  drop prod_rate_id;
// 添加表数据
insert into 表名 (列名...) values (对应的值...);
insert into UNION_INSTITUTION_CONFIG (CREATED,INSTITUTION_CODE,PATTERN_KEY,PATTERN_VALUE,IS_DEL) values (now(),'0151','BFB_USER_NO','3701',0);

// sql time1-time2=多少天
datediff(time1，time2)

// mysql 生成UUID
SELECT REPLACE (UUID(), '-', '')

// 如果是字符串排序会出现问题,字符串转换成数字可以排序
order by (period+0) asc

// sql如果是null那么
SELECT IF(ISNULL(SUM(g)),0,SUM(g)) FROM table;

// 创建数据库的时候指定字符编码
drop database if exists abc;
create database abc DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
drop database if exists abc;
create database abc DEFAULT CHARACTER SET gbk COLLATE gbk_chinese_ci;
drop database if exists abc;
create database abc DEFAULT CHARACTER SET latin1 COLLATE latin1_german1_ci;

一、简单描述表结构，字段类型
desc tabl_name;
显示表结构，字段类型，主键，是否为空等属性，但不显示外键。
二、查询表中列的注释信息
select * from information_schema.columns where table_schema = 'db' and table_name = 'tablename';
三、只查询列名和注释
select column_name, column_comment from information_schema.columns where table_schema ='db' and table_name = 'tablename';
四、#查看表的注释
select table_name,table_comment from information_schema.tables where table_schema = 'db' and table_name ='tablename';
五、查看表生成的DDL
show create table table_name;

sql 截取字符串
MySQL：
　　1、LOCATE(substr , str )：返回子串 substr 在字符串 str 中第一次出现的位置，如果字符substr在字符串str中不存在，则返回0；
　　2、POSITION(substr  IN str )：返回子串 substr 在字符串 str 中第一次出现的位置，如果字符substr在字符串str中不存在，与LOCATE函数作用相同；
　　3、LEFT(str, length)：从左边开始截取str，length是截取的长度；
　　4、RIGHT(str, length)：从右边开始截取str，length是截取的长度；
　　5、SUBSTRING_INDEX(str  ,substr  ,n)：返回字符substr在str中第n次出现位置之前的字符串;
　　6、SUBSTRING(str  ,n ,m)：返回字符串str从第n个字符截取到第m个字符；
　　7、REPLACE(str, n, m)：将字符串str中的n字符替换成m字符；
　　8、LENGTH(str)：计算字符串str的长度；
　　MySQL函数大全：http://www.jb51.net/article/42906.htm

// 修改字符串的字符集及排序规则
CONVERT(b.fullCode USING utf8) COLLATE utf8_unicode_ci

// dblink 相关
#查询是否用户是否有dblink权限 PQS 为用户名称
select * from user_sys_privs where privilege like upper('%DATABASE LINK%') AND USERNAME='PQS';
#赋权限
grant create public database link to PQS

#TEST111 dblink名称 MT MT2018 账号密码

create public database link TEST111
connect to "MT" identified by "MT2018"
using '(DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = 10.68.214.94)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SERVICE_NAME = tpmcdb)
    )
  )';
  :
  别名的好处: 直接查表
#别名 查询时一定要将B表前面加上 @TEST111
CREATE OR REPLACE SYNONYM COURSE for COURSE@TEST111

#例子
create public database link PQS_MES
connect to "hzwmes" identified by "hzwmes"
using '(DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = 172.22.80.37)(PORT = 1521))
      (LOAD_BALANCE=yes)
    )
    (CONNECT_DATA =
      (SERVICE = DEDICATED)
      (SERVICE_NAME = MES)
    )
  )';

// mysql日期格式化DATE_FORMAT() 函数
DATE_FORMAT(date,format)
http://www.w3school.com.cn/sql/func_date_format.asp
DATE_FORMAT(NOW(),'%b %d %Y %h:%i %p')
DATE_FORMAT(NOW(),'%m-%d-%Y')
DATE_FORMAT(NOW(),'%d %b %y')
DATE_FORMAT(NOW(),'%d %b %Y %T:%f')
Dec 29 2008 11:45 PM
12-29-2008
29 Dec 08
29 Dec 2008 16:25:46.635

// 慢查询日志地址查看
show variables like '%quer%';

// 查看父级数据
CREATE FUNCTION `getParentList`(rootId varchar(100))   
RETURNS varchar(1000)   
BEGIN   
DECLARE fid varchar(100) default '';   
DECLARE str varchar(1000) default rootId;   
  
WHILE rootId is not null  do   
    SET fid =(SELECT PID FROM DIGUI WHERE ID = rootId);   
    IF fid is not null THEN   
        SET str = concat(str, ',', fid);      
        SET rootId = fid;   
    ELSE   
        SET rootId = fid;   
    END IF;   
END WHILE;   
return str;  
END

// 查询子级数据https://www.cnblogs.com/rainydayfmb/p/8028868.html
select id from (
              select t1.id,
              if(find_in_set(parent_id, @pids) > 0, @pids := concat(@pids, ',', id), 0) as ischild
              from (
                   select id,parent_id from re_menu t where t.status = 1 order by parent_id, id
                  ) t1,
                  (select @pids := 要查询的菜单节点 id) t2
             ) t3 where ischild != 0

// 查看当前连接数 和 连接数上限
show status like  'Threads%'
show variables like '%max_connection%'; 

// 解决bash: mysql: command not found... 的方法 https://blog.csdn.net/qq_38695182/article/details/79953474
ln  -s   /usr/local/mysql/bin/mysql    /usr/bin

// \G:将查询到的横向表格纵向输出，方便阅读
select * from table \G;



Oracle:
order by colum asc 时，null默认被放在最后
order by colum desc 时，null默认被放在最前
nulls first 时，强制null放在最前，不为null的按声明顺序[asc|desc]进行排序
nulls last 时，强制null放在最后，不为null的按声明顺序[asc|desc]进行排序

MySQL:
order by colum asc 时，null默认被放在最前
order by colum desc 时，null默认被放在最后
ORDER BY IF(ISNULL(update_date),0,1) null被强制放在最前，不为null的按声明顺序[asc|desc]进行排序
ORDER BY IF(ISNULL(update_date),1,0) null被强制放在最后，不为null的按声明顺序[asc|desc]进行排序


